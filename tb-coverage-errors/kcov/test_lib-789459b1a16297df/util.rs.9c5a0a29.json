var data = {lines:[
{"lineNum":"    1","line":""},
{"lineNum":"    2","line":"#[cfg(windows)]"},
{"lineNum":"    3","line":"extern crate ws2_32;"},
{"lineNum":"    4","line":""},
{"lineNum":"    5","line":"#[cfg(windows)]"},
{"lineNum":"    6","line":"use std::mem;"},
{"lineNum":"    7","line":"use std::ffi::{CStr, CString};"},
{"lineNum":"    8","line":"use libc::c_char;"},
{"lineNum":"    9","line":"use std::ptr;"},
{"lineNum":"   10","line":""},
{"lineNum":"   11","line":"#[cfg(windows)]"},
{"lineNum":"   12","line":"pub fn other_init() {"},
{"lineNum":"   13","line":"    // libtls currently (2.3.1) fails to initialize the"},
{"lineNum":"   14","line":"    // windows network stack - issue #167"},
{"lineNum":"   15","line":"    unsafe {"},
{"lineNum":"   16","line":"        let mut data = mem::zeroed();"},
{"lineNum":"   17","line":"        ws2_32::WSAStartup(0x202, &mut data);"},
{"lineNum":"   18","line":"    }"},
{"lineNum":"   19","line":"}"},
{"lineNum":"   20","line":""},
{"lineNum":"   21","line":"#[cfg(not(windows))]"},
{"lineNum":"   22","line":"pub fn other_init() {}","class":"linePartCov","hits":"2","order":"50","possible_hits":"3",},
{"lineNum":"   23","line":""},
{"lineNum":"   24","line":"pub fn from_cstr(s: *const c_char) -> String {"},
{"lineNum":"   25","line":"    unsafe {"},
{"lineNum":"   26","line":"        if s == ptr::null_mut() {"},
{"lineNum":"   27","line":"            String::new()"},
{"lineNum":"   28","line":"        } else {"},
{"lineNum":"   29","line":"            let slice = CStr::from_ptr(s);"},
{"lineNum":"   30","line":"            String::from_utf8_lossy(slice.to_bytes()).into_owned()"},
{"lineNum":"   31","line":"        }"},
{"lineNum":"   32","line":"    }"},
{"lineNum":"   33","line":"}"},
{"lineNum":"   34","line":""},
{"lineNum":"   35","line":"/// Get C string ptr, but use NULL if the string is empty."},
{"lineNum":"   36","line":"/// Because some C functions treat NULL and \"\\0\" differently"},
{"lineNum":"   37","line":"pub fn str_c_ptr(s: &str) -> *const i8 {"},
{"lineNum":"   38","line":"    if s.is_empty() {"},
{"lineNum":"   39","line":"        ptr::null()"},
{"lineNum":"   40","line":"    } else {"},
{"lineNum":"   41","line":"        unsafe { CString::from_vec_unchecked(s.bytes().collect()).as_ptr() }"},
{"lineNum":"   42","line":"    }"},
{"lineNum":"   43","line":"}"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "test_lib-789459b1a16297df", "date" : "2016-01-26 00:36:18", "instrumented" : 1, "covered" : 1,};
var merged_data = [];
