var data = {lines:[
{"lineNum":"    1","line":"// Copyright 2015 The Rust Project Developers. See the COPYRIGHT"},
{"lineNum":"    2","line":"// file at the top-level directory of this distribution and at"},
{"lineNum":"    3","line":"// http://rust-lang.org/COPYRIGHT."},
{"lineNum":"    4","line":"//"},
{"lineNum":"    5","line":"// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or"},
{"lineNum":"    6","line":"// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license"},
{"lineNum":"    7","line":"// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your"},
{"lineNum":"    8","line":"// option. This file may not be copied, modified, or distributed"},
{"lineNum":"    9","line":"// except according to those terms."},
{"lineNum":"   10","line":""},
{"lineNum":"   11","line":"use std::fmt;"},
{"lineNum":"   12","line":"use std::io;"},
{"lineNum":"   13","line":"use std::mem;"},
{"lineNum":"   14","line":"use std::net::SocketAddr;"},
{"lineNum":"   15","line":"use libc::c_int;"},
{"lineNum":"   16","line":""},
{"lineNum":"   17","line":"use sys;"},
{"lineNum":"   18","line":"use sys::c;"},
{"lineNum":"   19","line":""},
{"lineNum":"   20","line":"pub struct Socket {"},
{"lineNum":"   21","line":"    inner: sys::Socket,"},
{"lineNum":"   22","line":"}"},
{"lineNum":"   23","line":""},
{"lineNum":"   24","line":"impl Socket {"},
{"lineNum":"   25","line":"    pub fn new(family: c_int, ty: c_int) -> io::Result<Socket> {","class":"lineCov","hits":"1","order":"1147",},
{"lineNum":"   26","line":"        Ok(Socket { inner: try!(sys::Socket::new(family, ty)) })","class":"lineCov","hits":"1","order":"1148",},
{"lineNum":"   27","line":"    }","class":"lineCov","hits":"1","order":"1150",},
{"lineNum":"   28","line":""},
{"lineNum":"   29","line":"    pub fn bind(&self, addr: &SocketAddr) -> io::Result<()> {","class":"lineCov","hits":"1","order":"1152",},
{"lineNum":"   30","line":"        let (addr, len) = addr2raw(addr);","class":"lineCov","hits":"1","order":"1154",},
{"lineNum":"   31","line":"        unsafe {"},
{"lineNum":"   32","line":"            ::cvt(c::bind(self.inner.raw(), addr, len)).map(|_| ())","class":"lineCov","hits":"1","order":"1155",},
{"lineNum":"   33","line":"        }"},
{"lineNum":"   34","line":"    }","class":"lineCov","hits":"1","order":"1156",},
{"lineNum":"   35","line":""},
{"lineNum":"   36","line":"    pub fn listen(&self, backlog: i32) -> io::Result<()> {","class":"lineCov","hits":"1","order":"1159",},
{"lineNum":"   37","line":"        unsafe {"},
{"lineNum":"   38","line":"            ::cvt(c::listen(self.inner.raw(), backlog)).map(|_| ())","class":"lineCov","hits":"1","order":"1160",},
{"lineNum":"   39","line":"        }"},
{"lineNum":"   40","line":"    }","class":"lineCov","hits":"1","order":"1161",},
{"lineNum":"   41","line":""},
{"lineNum":"   42","line":"    pub fn connect(&self, addr: &SocketAddr) -> io::Result<()> {"},
{"lineNum":"   43","line":"        let (addr, len) = addr2raw(addr);"},
{"lineNum":"   44","line":"        unsafe {"},
{"lineNum":"   45","line":"            ::cvt(c::connect(self.inner.raw(), addr, len)).map(|_| ())"},
{"lineNum":"   46","line":"        }"},
{"lineNum":"   47","line":"    }"},
{"lineNum":"   48","line":"}"},
{"lineNum":"   49","line":""},
{"lineNum":"   50","line":"impl fmt::Debug for Socket {"},
{"lineNum":"   51","line":"    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {"},
{"lineNum":"   52","line":"        self.inner.raw().fmt(f)"},
{"lineNum":"   53","line":"    }"},
{"lineNum":"   54","line":"}"},
{"lineNum":"   55","line":""},
{"lineNum":"   56","line":"impl ::AsInner for Socket {"},
{"lineNum":"   57","line":"    type Inner = sys::Socket;"},
{"lineNum":"   58","line":"    fn as_inner(&self) -> &sys::Socket { &self.inner }","class":"lineCov","hits":"1","order":"1157",},
{"lineNum":"   59","line":"}"},
{"lineNum":"   60","line":""},
{"lineNum":"   61","line":"impl ::FromInner for Socket {"},
{"lineNum":"   62","line":"    type Inner = sys::Socket;"},
{"lineNum":"   63","line":"    fn from_inner(sock: sys::Socket) -> Socket {"},
{"lineNum":"   64","line":"        Socket { inner: sock }"},
{"lineNum":"   65","line":"    }"},
{"lineNum":"   66","line":"}"},
{"lineNum":"   67","line":""},
{"lineNum":"   68","line":"impl ::IntoInner for Socket {"},
{"lineNum":"   69","line":"    type Inner = sys::Socket;"},
{"lineNum":"   70","line":"    fn into_inner(self) -> sys::Socket { self.inner }","class":"lineCov","hits":"1","order":"1146",},
{"lineNum":"   71","line":"}"},
{"lineNum":"   72","line":""},
{"lineNum":"   73","line":"fn addr2raw(addr: &SocketAddr) -> (*const c::sockaddr, c::socklen_t) {","class":"lineCov","hits":"1","order":"1149",},
{"lineNum":"   74","line":"    match *addr {","class":"lineCov","hits":"1","order":"1151",},
{"lineNum":"   75","line":"        SocketAddr::V4(ref a) => {"},
{"lineNum":"   76","line":"            (a as *const _ as *const _, mem::size_of_val(a) as c::socklen_t)","class":"lineCov","hits":"1","order":"1153",},
{"lineNum":"   77","line":"        }"},
{"lineNum":"   78","line":"        SocketAddr::V6(ref a) => {"},
{"lineNum":"   79","line":"            (a as *const _ as *const _, mem::size_of_val(a) as c::socklen_t)","class":"lineNoCov","hits":"0",},
{"lineNum":"   80","line":"        }"},
{"lineNum":"   81","line":"    }"},
{"lineNum":"   82","line":"}","class":"lineCov","hits":"1","order":"1158",},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "test_server-9ef2987148640087", "date" : "2016-02-17 13:46:05", "instrumented" : 17, "covered" : 16,};
var merged_data = [];
