var data = {lines:[
{"lineNum":"    1","line":"use {io, Evented, EventSet, PollOpt, Selector, Token};"},
{"lineNum":"    2","line":"use std::io::{Read, Write};"},
{"lineNum":"    3","line":"use std::os::unix::io::{AsRawFd, FromRawFd, RawFd};"},
{"lineNum":"    4","line":""},
{"lineNum":"    5","line":"/*"},
{"lineNum":"    6","line":" *"},
{"lineNum":"    7","line":" * ===== Basic IO type ====="},
{"lineNum":"    8","line":" *"},
{"lineNum":"    9","line":" */"},
{"lineNum":"   10","line":""},
{"lineNum":"   11","line":"#[derive(Debug)]"},
{"lineNum":"   12","line":"pub struct Io {"},
{"lineNum":"   13","line":"    fd: RawFd,"},
{"lineNum":"   14","line":"}"},
{"lineNum":"   15","line":""},
{"lineNum":"   16","line":"impl Io {"},
{"lineNum":"   17","line":"    pub fn from_raw_fd(fd: RawFd) -> Io {","class":"lineCov","hits":"1","order":"1140",},
{"lineNum":"   18","line":"        Io { fd: fd }","class":"lineCov","hits":"1","order":"1141",},
{"lineNum":"   19","line":"    }","class":"lineCov","hits":"1","order":"1143",},
{"lineNum":"   20","line":"}"},
{"lineNum":"   21","line":""},
{"lineNum":"   22","line":"impl From<RawFd> for Io {"},
{"lineNum":"   23","line":"    fn from(fd: RawFd) -> Io {"},
{"lineNum":"   24","line":"        Io { fd: fd }"},
{"lineNum":"   25","line":"    }"},
{"lineNum":"   26","line":"}"},
{"lineNum":"   27","line":""},
{"lineNum":"   28","line":"impl FromRawFd for Io {"},
{"lineNum":"   29","line":"    unsafe fn from_raw_fd(fd: RawFd) -> Io {"},
{"lineNum":"   30","line":"        From::from(fd)"},
{"lineNum":"   31","line":"    }"},
{"lineNum":"   32","line":"}"},
{"lineNum":"   33","line":""},
{"lineNum":"   34","line":"impl AsRawFd for Io {"},
{"lineNum":"   35","line":"    fn as_raw_fd(&self) -> RawFd {","class":"lineCov","hits":"1","order":"1137",},
{"lineNum":"   36","line":"        self.fd","class":"lineCov","hits":"1","order":"1138",},
{"lineNum":"   37","line":"    }","class":"lineCov","hits":"1","order":"1139",},
{"lineNum":"   38","line":"}"},
{"lineNum":"   39","line":""},
{"lineNum":"   40","line":"impl Evented for Io {"},
{"lineNum":"   41","line":"    fn register(&self, selector: &mut Selector, token: Token, interest: EventSet, opts: PollOpt) -> io::Result<()> {","class":"lineCov","hits":"1","order":"1142",},
{"lineNum":"   42","line":"        selector.register(self.fd, token, interest, opts)","class":"lineCov","hits":"1","order":"1144",},
{"lineNum":"   43","line":"    }","class":"lineCov","hits":"1","order":"1145",},
{"lineNum":"   44","line":""},
{"lineNum":"   45","line":"    fn reregister(&self, selector: &mut Selector, token: Token, interest: EventSet, opts: PollOpt) -> io::Result<()> {"},
{"lineNum":"   46","line":"        selector.reregister(self.fd, token, interest, opts)"},
{"lineNum":"   47","line":"    }"},
{"lineNum":"   48","line":""},
{"lineNum":"   49","line":"    fn deregister(&self, selector: &mut Selector) -> io::Result<()> {"},
{"lineNum":"   50","line":"        selector.deregister(self.fd)"},
{"lineNum":"   51","line":"    }"},
{"lineNum":"   52","line":"}"},
{"lineNum":"   53","line":""},
{"lineNum":"   54","line":"impl Read for Io {"},
{"lineNum":"   55","line":"    fn read(&mut self, dst: &mut [u8]) -> io::Result<usize> {"},
{"lineNum":"   56","line":"        <&Io as Read>::read(&mut &*self, dst)"},
{"lineNum":"   57","line":"    }"},
{"lineNum":"   58","line":"}"},
{"lineNum":"   59","line":""},
{"lineNum":"   60","line":"impl<\'a> Read for &\'a Io {"},
{"lineNum":"   61","line":"    fn read(&mut self, dst: &mut [u8]) -> io::Result<usize> {","class":"lineNoCov","hits":"0",},
{"lineNum":"   62","line":"        use nix::unistd::read;"},
{"lineNum":"   63","line":""},
{"lineNum":"   64","line":"        read(self.as_raw_fd(), dst)","class":"lineNoCov","hits":"0",},
{"lineNum":"   65","line":"            .map_err(super::from_nix_error)"},
{"lineNum":"   66","line":"    }","class":"lineNoCov","hits":"0",},
{"lineNum":"   67","line":"}"},
{"lineNum":"   68","line":""},
{"lineNum":"   69","line":"impl Write for Io {"},
{"lineNum":"   70","line":"    fn write(&mut self, src: &[u8]) -> io::Result<usize> {"},
{"lineNum":"   71","line":"        <&Io as Write>::write(&mut &*self, src)"},
{"lineNum":"   72","line":"    }"},
{"lineNum":"   73","line":""},
{"lineNum":"   74","line":"    fn flush(&mut self) -> io::Result<()> {"},
{"lineNum":"   75","line":"        Ok(())"},
{"lineNum":"   76","line":"    }"},
{"lineNum":"   77","line":"}"},
{"lineNum":"   78","line":""},
{"lineNum":"   79","line":"impl<\'a> Write for &\'a Io {"},
{"lineNum":"   80","line":"    fn write(&mut self, src: &[u8]) -> io::Result<usize> {"},
{"lineNum":"   81","line":"        use nix::unistd::write;"},
{"lineNum":"   82","line":""},
{"lineNum":"   83","line":"        write(self.as_raw_fd(), src)"},
{"lineNum":"   84","line":"            .map_err(super::from_nix_error)"},
{"lineNum":"   85","line":"    }"},
{"lineNum":"   86","line":""},
{"lineNum":"   87","line":"    fn flush(&mut self) -> io::Result<()> {"},
{"lineNum":"   88","line":"        Ok(())"},
{"lineNum":"   89","line":"    }"},
{"lineNum":"   90","line":"}"},
{"lineNum":"   91","line":""},
{"lineNum":"   92","line":"impl Drop for Io {"},
{"lineNum":"   93","line":"    fn drop(&mut self) {","class":"lineCov","hits":"1","order":"1134",},
{"lineNum":"   94","line":"        use nix::unistd::close;"},
{"lineNum":"   95","line":"        let _ = close(self.as_raw_fd());","class":"lineCov","hits":"1","order":"1135",},
{"lineNum":"   96","line":"    }","class":"lineCov","hits":"1","order":"1136",},
{"lineNum":"   97","line":"}"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "test_server-9ef2987148640087", "date" : "2016-02-17 14:25:27", "instrumented" : 15, "covered" : 12,};
var merged_data = [];
