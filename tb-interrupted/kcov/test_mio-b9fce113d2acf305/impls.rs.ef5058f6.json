var data = {lines:[
{"lineNum":"    1","line":"// Copyright 2015 The Rust Project Developers. See the COPYRIGHT"},
{"lineNum":"    2","line":"// file at the top-level directory of this distribution and at"},
{"lineNum":"    3","line":"// http://rust-lang.org/COPYRIGHT."},
{"lineNum":"    4","line":"//"},
{"lineNum":"    5","line":"// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or"},
{"lineNum":"    6","line":"// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license"},
{"lineNum":"    7","line":"// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your"},
{"lineNum":"    8","line":"// option. This file may not be copied, modified, or distributed"},
{"lineNum":"    9","line":"// except according to those terms."},
{"lineNum":"   10","line":""},
{"lineNum":"   11","line":"use std::os::unix::io::{FromRawFd, AsRawFd};"},
{"lineNum":"   12","line":"use libc::c_int;"},
{"lineNum":"   13","line":""},
{"lineNum":"   14","line":"use {TcpBuilder, UdpBuilder, FromInner, AsInner};"},
{"lineNum":"   15","line":"use socket::Socket;"},
{"lineNum":"   16","line":"use sys;"},
{"lineNum":"   17","line":""},
{"lineNum":"   18","line":"impl FromRawFd for TcpBuilder {"},
{"lineNum":"   19","line":"    unsafe fn from_raw_fd(fd: c_int) -> TcpBuilder {"},
{"lineNum":"   20","line":"        let sock = sys::Socket::from_inner(fd);"},
{"lineNum":"   21","line":"        TcpBuilder::from_inner(Socket::from_inner(sock))"},
{"lineNum":"   22","line":"    }"},
{"lineNum":"   23","line":"}"},
{"lineNum":"   24","line":""},
{"lineNum":"   25","line":"impl AsRawFd for TcpBuilder {"},
{"lineNum":"   26","line":"    fn as_raw_fd(&self) -> c_int {","class":"lineCov","hits":"1","order":"49","possible_hits":"1",},
{"lineNum":"   27","line":"        // TODO: this unwrap() is very bad"},
{"lineNum":"   28","line":"        self.as_inner().borrow().as_ref().unwrap().as_inner().raw()","class":"lineCov","hits":"2","order":"50","possible_hits":"2",},
{"lineNum":"   29","line":"    }","class":"linePartCov","hits":"1","order":"75","possible_hits":"2",},
{"lineNum":"   30","line":"}"},
{"lineNum":"   31","line":""},
{"lineNum":"   32","line":"impl FromRawFd for UdpBuilder {"},
{"lineNum":"   33","line":"    unsafe fn from_raw_fd(fd: c_int) -> UdpBuilder {"},
{"lineNum":"   34","line":"        let sock = sys::Socket::from_inner(fd);"},
{"lineNum":"   35","line":"        UdpBuilder::from_inner(Socket::from_inner(sock))"},
{"lineNum":"   36","line":"    }"},
{"lineNum":"   37","line":"}"},
{"lineNum":"   38","line":""},
{"lineNum":"   39","line":"impl AsRawFd for UdpBuilder {"},
{"lineNum":"   40","line":"    fn as_raw_fd(&self) -> c_int {"},
{"lineNum":"   41","line":"        // TODO: this unwrap() is very bad"},
{"lineNum":"   42","line":"        self.as_inner().borrow().as_ref().unwrap().as_inner().raw()"},
{"lineNum":"   43","line":"    }"},
{"lineNum":"   44","line":"}"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "test_mio-b9fce113d2acf305", "date" : "2016-02-17 13:45:59", "instrumented" : 3, "covered" : 3,};
var merged_data = [];
